# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build & Deployment

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]    
jobs:
  build:
    runs-on: ubuntu-latest  
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt'
        architecture: x64
        cache: maven
    - name: Build with Maven
      run: mvn -B clean install --file pom.xml
    - name: Docker Login
      env:
        DOCKER_USER: ${{secrets.DOCKER_USERNAME}}
        DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      run: |
        docker login -u $DOCKER_USER -p $DOCKER_PASSWORD   
  
    - name: Build discovery-service Image
      working-directory: ./discovery-service
      run: docker build . --file Dockerfile --tag thaihv/discovery-service:0.0.1      
    - name: Docker Push discovery-service    
      run: docker push thaihv/discovery-service:0.0.1
      
    - name: Build Api-Gateway Image
      working-directory: ./api-gateway
      run: docker build . --file Dockerfile --tag thaihv/api-gateway:0.0.1      
    - name: Docker Push api-gateway     
      run: docker push thaihv/api-gateway:0.0.1

    - name: Build kpi-service Image
      working-directory: ./kpi-service
      run: docker build . --file Dockerfile --tag thaihv/kpi-service:0.0.1      
    - name: Docker Push kpi-service     
      run: docker push thaihv/kpi-service:0.0.1
      
    - name: Build realtime-service Image
      working-directory: ./realtime-service
      run: docker build . --file Dockerfile --tag thaihv/realtime-service:0.0.1      
    - name: Docker Push realtime-service     
      run: docker push thaihv/realtime-service:0.0.1      
      
    - name: Build ui-community-service Image
      working-directory: ./ui-community-service
      run: docker build . --file Dockerfile --tag thaihv/ui-community-service:0.0.1      
    - name: Docker Push ui-community-service     
      run: docker push thaihv/ui-community-service:0.0.1    
      
    - name: Build ui-service Image
      working-directory: ./ui-service
      run: docker build . --file Dockerfile --tag thaihv/ui-service:0.0.1      
    - name: Docker Push ui-service     
      run: docker push thaihv/ui-service:0.0.1  

    - name: Deploy To DigitalOcean  
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{secrets.SSH_HOST}} 
        key: ${{secrets.SSH_PRIVATE_KEY}} 
        username: ${{ secrets.SSH_USERNAME }}     
        script: |  
          rm -rf github
          mkdir github 
          cd github 
          git clone git@github.com:thaihv/smartcity-platform.git
          cd ..
          cp github/smartcity-platform/smartamky-compose.yml .
          docker-compose -f smartamky-compose.yml stop  discovery api-gateway
          docker pull thaihv/discovery-service:0.0.1
          docker pull thaihv/api-gateway:0.0.1
          docker-compose -f smartamky-compose.yml up -d discovery api-gateway
          echo 'Deployment successful to Digital Ocean' 

        
